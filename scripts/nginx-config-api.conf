# Конфигурация Nginx для API сервера с поддоменами
# Поместить в /etc/nginx/sites-available/prohelper-api

# HTTP -> HTTPS редирект
server {
    listen 80;
    server_name prohelper.pro *.prohelper.pro;
    
    # Редирект на HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS сервер для API
server {
    listen 443 ssl http2;
    server_name prohelper.pro *.prohelper.pro;
    
    root /var/www/prohelper/public;
    index index.php index.html index.htm;
    
    # SSL настройки - используем wildcard сертификат
    ssl_certificate /etc/letsencrypt/live/prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prohelper.pro/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Размеры файлов
    client_max_body_size 20M;
    
    # Основные локации
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # API роуты
    location /api/ {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Обработка PHP
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Передача заголовков для определения поддомена
        fastcgi_param HTTP_HOST $host;
        fastcgi_param SERVER_NAME $server_name;
    }
    
    # Запрет доступа к системным файлам
    location ~ /\.ht {
        deny all;
    }
    
    location ~ /\.git {
        deny all;
    }
    
    # Статические файлы
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # Логи
    access_log /var/log/nginx/prohelper_access.log;
    error_log /var/log/nginx/prohelper_error.log warn;
}

# Админка на отдельном сервере, убираем отсюда

# HTTPS сервер для холдинговых поддоменов
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    # Исключаем служебные поддомены
    server_name ~^(?!www|lk|api|admin|mail|ftp)([a-z0-9-]+)\.prohelper\.pro$;

    # SSL конфигурация
    ssl_certificate /etc/letsencrypt/live/api.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.prohelper.pro/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Логи
    access_log /var/log/nginx/holdings_prohelper_access.log;
    error_log /var/log/nginx/holdings_prohelper_error.log;

    # Холдинговые интерфейсы Laravel
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
} 