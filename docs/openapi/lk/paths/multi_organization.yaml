/multi-organization/check-availability:
  get:
    tags: [MultiOrganization]
    summary: Проверить, доступен ли модуль Multi-Organization
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Доступность
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ModuleAvailabilityResponse.yaml'
/multi-organization/hierarchy:
  get:
    tags: [MultiOrganization]
    summary: Получить иерархию холдинга
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Иерархия
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      $ref: '../components/schemas/HoldingHierarchy.yaml'
/multi-organization/accessible:
  get:
    tags: [MultiOrganization]
    summary: Список доступных организаций
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Организации
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../components/schemas/OrganizationSummary.yaml'
/multi-organization/organization/{organizationId}:
  parameters:
    - { name: organizationId, in: path, required: true, schema: { type: integer } }
  get:
    tags: [MultiOrganization]
    summary: Данные организации
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Организация
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      $ref: '../components/schemas/OrganizationData.yaml'
/multi-organization/switch-context:
  post:
    tags: [MultiOrganization]
    summary: Переключить контекст организации
    security: [{ bearerAuth: [] }]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/SwitchContextRequest.yaml'
    responses:
      "200":
        description: Переключено
        content:
          application/json:
            schema:
              $ref: '../components/schemas/SwitchContextResponse.yaml'
/multi-organization/dashboard:
  get:
    tags: [MultiOrganization]
    summary: Дашборд холдинга
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Дашборд
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      $ref: '../components/schemas/HoldingDashboard.yaml'
/multi-organization/child-organizations:
  get:
    tags: [MultiOrganization]
    summary: Список дочерних организаций
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Список
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      $ref: '../components/schemas/ChildOrganizationsList.yaml'
/multi-organization/create-holding:
  post:
    tags: [MultiOrganization]
    summary: Создать холдинг
    security: [{ bearerAuth: [] }]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/CreateHoldingRequest.yaml'
    responses:
      "201":
        description: Создано
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      $ref: '../components/schemas/OrganizationGroup.yaml'
/multi-organization/add-child:
  post:
    tags: [MultiOrganization]
    summary: Добавить дочернюю организацию
    security: [{ bearerAuth: [] }]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/AddChildOrganizationRequest.yaml'
    responses:
      "201":
        description: Добавлено
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      $ref: '../components/schemas/ChildOrganizationCreated.yaml'
/multi-organization/summary:
  get:
    tags: [MultiOrganization]
    summary: Сводная информация по холдингу (все организации, проекты, договоры, акты, выполненные работы, статистика)
    description: |
      Возвращает агрегированную сводку по всем организациям холдинга. Поддерживает экспорт CSV по секциям (projects, contracts, acts, completed_works).
      
      Пример: `/multi-organization/summary?export=csv&section=projects`
    security: [{ bearerAuth: [] }]
    parameters:
      - in: query
        name: date_from
        schema: { type: string, format: date }
        required: false
        description: Начальная дата фильтра
      - in: query
        name: date_to
        schema: { type: string, format: date }
        required: false
        description: Конечная дата фильтра
      - in: query
        name: status
        schema: { type: string }
        required: false
        description: Фильтр по статусу
      - in: query
        name: is_approved
        schema: { type: boolean }
        required: false
        description: Фильтр по утверждённости акта
      - in: query
        name: export
        schema: { type: string, enum: [csv] }
        required: false
        description: Если указан, возвращает CSV-файл
      - in: query
        name: section
        schema: { type: string, enum: [projects, contracts, acts, completed_works] }
        required: false
        description: Секция для экспорта CSV
    responses:
      "200":
        description: Сводная информация по холдингу
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    organizations:
                      type: array
                      items:
                        type: object
                        properties:
                          id: { type: integer }
                          name: { type: string }
                          is_active: { type: boolean }
                          projects_count: { type: integer }
                          contracts_count: { type: integer }
                    projects:
                      type: array
                      items:
                        $ref: '../components/schemas/ProjectDTO.yaml'
                    contracts:
                      type: array
                      items:
                        $ref: '../components/schemas/ContractDTO.yaml'
                    acts:
                      type: array
                      items:
                        $ref: '../components/schemas/ContractPerformanceActDTO.yaml'
                    completed_works:
                      type: array
                      items:
                        $ref: '../components/schemas/CompletedWorkDTO.yaml'
                    stats:
                      type: object
                      properties:
                        contracts:
                          type: object
                          properties:
                            count: { type: integer }
                            total_amount: { type: number, format: float }
                        acts:
                          type: object
                          properties:
                            count: { type: integer }
                            total_amount: { type: number, format: float }
                        projects:
                          type: object
                          properties:
                            count: { type: integer }
      "400":
        description: Ошибка запроса (например, неверная секция для экспорта)
        content:
          application/json:
            schema:
              type: object
              properties:
                message: { type: string } 