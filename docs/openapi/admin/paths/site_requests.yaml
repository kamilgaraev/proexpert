/site-requests:
    get:
    tags: [SiteRequests]
    summary: Получить список заявок с сайта организации
    description: |
      Возвращает пагинированный список заявок с сайта для организации
      с возможностью фильтрации по множественным параметрам.
      Включает сводную информацию и метаданные.
      parameters:
      - in: query
        name: organization_id
          schema:
            type: integer
        description: ID организации (если не указан, берется из текущего пользователя)
        example: 10
      - in: query
        name: request_type
        schema:
          type: string
          enum: [material_request, info_request, issue_report, work_order, personnel_request, other]
        description: Фильтр по типу заявки
        example: "personnel_request"
      - in: query
        name: status
        schema:
          type: string
          enum: [draft, pending, submitted, approved, rejected, in_progress, completed, on_hold]
        description: Фильтр по статусу заявки
        example: "in_progress"
      - in: query
        name: project_id
          schema:
            type: integer
        description: Фильтр по проекту
        example: 25
      - in: query
        name: priority
        schema:
          type: string
          enum: [low, medium, high, urgent]
        description: Фильтр по приоритету
        example: "high"
      - in: query
        name: personnel_type
          schema:
            type: string
          enum: [general_worker, skilled_worker, foreman, engineer, specialist, operator, electrician, plumber, welder, carpenter, mason, painter, security, driver, other]
        description: Фильтр по типу персонала (для заявок на персонал)
        example: "mason"
      - in: query
        name: search
          schema:
            type: string
        description: Поиск по заголовку и описанию заявки
        example: "кирпич"
      - in: query
        name: per_page
          schema:
            type: integer
          default: 15
          minimum: 1
          maximum: 100
        description: Количество записей на страницу
        example: 15
      responses:
      "200":
        description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                  $ref: '../components/schemas/SiteRequestCollection.yaml'
            example:
              success: true
              data:
                data:
                  - id: 150
                    title: "Требуются рабочие для укладки кирпича"
                    request_type: "personnel_request"
                    status: "in_progress"
                    priority: "high"
                    personnel_type: "mason"
                    personnel_count: 5
                    required_date: "2024-12-25"
                    is_overdue: false
                    days_until_required: 10
                  meta:
                  total: 87
                  per_page: 15
                  current_page: 1
                summary:
                  total_requests: 15
                  by_status:
                    pending: 5
                    in_progress: 8
                    completed: 2
                  overdue_count: 2
      "400":
        description: Контекст организации не определен
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Organization context is required."
      "500":
        description: Внутренняя ошибка сервера
        content:
          application/json:
            schema:
                    type: object
                    properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Произошла ошибка при получении заявок"
  post:
    tags: [Site Requests]
    summary: Создать новую заявку с сайта
    description: |
      Создает новую заявку с сайта с поддержкой различных типов заявок.
      Для заявок на персонал требуются дополнительные поля.
      Поддерживает загрузку файлов.
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: '../components/schemas/SiteRequestCreateRequest.yaml'
          examples:
            personnel_request:
              summary: "Заявка на персонал"
              value:
                organization_id: 10
                project_id: 25
                title: "Требуются каменщики для кладки стен"
                description: "Необходимо 5 каменщиков для кладки стен 1-го этажа"
                request_type: "personnel_request"
                priority: "high"
                required_date: "2024-12-25"
                personnel_type: "mason"
                personnel_count: 5
                personnel_requirements: "Опыт работы от 2 лет"
                hourly_rate: 800.50
                work_hours_per_day: 8
                work_start_date: "2024-12-20"
                work_end_date: "2024-12-30"
                work_location: "Строительная площадка, 1-й этаж"
            material_request:
              summary: "Заявка на материалы"
              value:
                organization_id: 10
                project_id: 25
                title: "Нужен кирпич для кладки"
                description: "Требуется 1000 штук облицовочного кирпича"
                request_type: "material_request"
                priority: "medium"
                required_date: "2024-12-22"
                notes: "Предпочтительно красный цвет"
    responses:
      "201":
        description: Заявка успешно создана
        content:
          application/json:
            schema:
              $ref: '../components/schemas/SiteRequestResponse.yaml'
            example:
              success: true
              message: "Заявка успешно создана"
              data:
                id: 150
                title: "Требуются каменщики для кладки стен"
                request_type: "personnel_request"
                status: "pending"
                priority: "high"
                personnel_type: "mason"
                personnel_count: 5
                created_at: "2024-12-15T10:00:00Z"
      "400":
        description: Ошибка бизнес-логики
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Проект не найден или не принадлежит организации"
      "422":
        description: Ошибка валидации данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  example: false
                  message:
                    type: string
                errors:
                  type: object
            examples:
              validation_error:
                summary: "Ошибки валидации"
                value:
                  success: false
                  message: "The given data was invalid."
                  errors:
                    title: ["Заголовок обязателен для заполнения"]
                    personnel_count: ["Количество персонала обязательно для заявок на персонал"]
                    required_date: ["Требуемая дата не может быть в прошлом"]
      "500":
        description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  example: false
                  message:
                    type: string
                  example: "Произошла ошибка при создании заявки"

/site-requests-stats:
  get:
    tags: [SiteRequests]
    summary: Получить статистику заявок для дашборда
    description: |
      Возвращает сводную статистику заявок организации
      включая распределение по статусам, типам, приоритетам
      и детальную информацию о заявках на персонал.
    parameters:
      - in: query
        name: organization_id
        schema:
          type: integer
        description: ID организации (если не указан, берется из текущего пользователя)
        example: 10
    responses:
      "200":
        description: Статистика успешно получена
        content:
          application/json:
            schema:
              $ref: '../components/schemas/SiteRequestStatsResponse.yaml'
            example:
              success: true
              data:
                total_requests: 125
                by_status:
                  pending: 15
                  in_progress: 45
                  completed: 55
                  overdue: 10
                by_type:
                  personnel_request: 45
                  material_request: 35
                  equipment_request: 25
                by_priority:
                  urgent: 8
                  high: 25
                personnel_stats:
                  total_requests: 45
                  total_personnel_needed: 180
                  average_hourly_rate: 825.50
                  by_personnel_type:
                    mason:
                      count: 12
                      total_personnel: 48
                      average_rate: 900.00
      "400":
        description: Контекст организации не определен
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Organization context is required."
      "500":
        description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  example: false
                message:
                  type: string
                  example: "Произошла ошибка при получении статистики"

/site-requests/{id}:
    get:
    tags: [SiteRequests]
    summary: Получить детальную информацию о заявке
    description: |
      Возвращает полную информацию о заявке включая
      связанные объекты (проект, пользователь, файлы)
      с проверкой доступа по организации.
      parameters:
      - in: path
        name: id
          required: true
          schema:
            type: integer
        description: ID заявки
        example: 150
      responses:
      "200":
        description: Детальная информация о заявке
        content:
          application/json:
            schema:
              $ref: '../components/schemas/SiteRequestResponse.yaml'
            example:
              success: true
              data:
                id: 150
                title: "Требуются каменщики для кладки стен"
                description: "Необходимо 5 каменщиков для кладки стен 1-го этажа"
                request_type: "personnel_request"
                status: "in_progress"
                priority: "high"
                personnel_type: "mason"
                personnel_count: 5
                hourly_rate: 800.50
                work_location: "Строительная площадка, 1-й этаж"
                project:
                  id: 25
                  name: "Жилой комплекс Солнечный"
                user:
                  id: 15
                  name: "Иванов Иван Иванович"
                files:
                  - id: 45
                    name: "plan.jpg"
                    original_name: "План этажа.jpg"
                is_personnel_request: true
                status_label: "В работе"
                priority_label: "Высокий"
                personnel_type_label: "Каменщик"
                days_until_required: 10
                is_overdue: false
      "403":
        description: Нет доступа к заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Нет доступа к данной заявке"
      "404":
        description: Заявка не найдена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Заявка не найдена"
      "500":
        description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  example: false
                message:
                  type: string
                  example: "Произошла ошибка при получении заявки"
  put:
    tags: [SiteRequests]
      summary: Обновить заявку
    description: |
      Обновляет заявку с проверками:
      - принадлежности к организации
      - прав доступа текущего пользователя
      - валидации данных в зависимости от типа заявки
      parameters:
      - in: path
        name: id
          required: true
          schema:
            type: integer
        description: ID заявки для обновления
        example: 150
      requestBody:
        required: true
        content:
          application/json:
            schema:
            $ref: '../components/schemas/SiteRequestUpdateRequest.yaml'
          examples:
            status_update:
              summary: "Обновление статуса"
              value:
                status: "completed"
                notes: "Работы выполнены в срок"
            personnel_update:
              summary: "Обновление заявки на персонал"
              value:
                personnel_count: 3
                hourly_rate: 900.00
                priority: "urgent"
                notes: "Сокращено количество, увеличена ставка"
      responses:
      "200":
          description: Заявка успешно обновлена
        content:
          application/json:
            schema:
              $ref: '../components/schemas/SiteRequestResponse.yaml'
            example:
              success: true
              message: "Заявка успешно обновлена"
              data:
                id: 150
                status: "completed"
                personnel_count: 3
                hourly_rate: 900.00
                priority: "urgent"
                updated_at: "2024-12-15T16:30:00Z"
      "403":
        description: Нет доступа к заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Нет доступа к данной заявке"
      "404":
        description: Заявка не найдена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Заявка не найдена"
      "422":
        description: Ошибка валидации данных
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                errors:
                  type: object
      "500":
        description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  example: false
                message:
                  type: string
                  example: "Произошла ошибка при обновлении заявки"
    delete:
    tags: [SiteRequests]
      summary: Удалить заявку
    description: |
      Удаляет заявку с проверками:
      - принадлежности к организации
      - прав доступа текущего пользователя
      Также удаляет все связанные файлы с диска.
      parameters:
      - in: path
        name: id
          required: true
          schema:
            type: integer
        description: ID заявки для удаления
        example: 150
      responses:
      "200":
          description: Заявка успешно удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Заявка успешно удалена"
      "403":
        description: Нет доступа к заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Нет доступа к данной заявке"
      "404":
        description: Заявка не найдена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Заявка не найдена"
      "500":
        description: Внутренняя ошибка сервера
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Произошла ошибка при удалении заявки"

/site-requests/{siteRequest}/files:
  post:
    tags: [SiteRequests]
    summary: Загрузить файл к заявке
    description: |
      Загружает файл и прикрепляет его к заявке.
      Поддерживает создание миниатюр для изображений.
      Максимальный размер файла - 10MB.
    parameters:
      - in: path
        name: siteRequest
        required: true
        schema:
          type: integer
        description: ID заявки
        example: 150
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: '../components/schemas/SiteRequestFileUploadRequest.yaml'
      responses:
      "201":
        description: Файл успешно загружен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                message:
                  type: string
                  example: "Файл успешно загружен"
                  data:
                    type: object
                    properties:
                    id:
                      type: integer
                      example: 45
                    name:
                      type: string
                      example: "document.pdf"
                    original_name:
                      type: string
                      example: "Техническое задание.pdf"
                    size:
                        type: integer
                      example: 1024000
                    mime_type:
                      type: string
                      example: "application/pdf"
      "403":
        description: Нет доступа к заявке
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Нет доступа к данной заявке"
      "413":
        description: Файл слишком большой
        content:
          application/json:
            schema:
                        type: object
                        properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Размер файла превышает допустимый лимит 10MB"
      "422":
        description: Недопустимый тип файла
        content:
          application/json:
            schema:
                        type: object
                        properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Недопустимый тип файла"

/site-requests/{siteRequest}/files/{file}:
  delete:
    tags: [SiteRequests]
    summary: Удалить файл заявки
    description: |
      Удаляет файл из заявки и с диска.
      Проверяет права доступа к заявке и принадлежность файла к заявке.
    parameters:
      - in: path
        name: siteRequest
        required: true
        schema:
                            type: integer
        description: ID заявки
        example: 150
      - in: path
        name: file
        required: true
        schema:
                            type: integer
        description: ID файла
        example: 45
    responses:
      "200":
        description: Файл успешно удален
        content:
          application/json:
            schema:
                        type: object
                        properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Файл успешно удален"
      "403":
        description: Нет доступа к заявке или файлу
        content:
          application/json:
            schema:
                        type: object
                        properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Доступ к файлу запрещен"
      "404":
        description: Файл не найден
        content:
          application/json:
            schema:
                            type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Файл не найден у данной заявки"
      "500":
        description: Ошибка при удалении файла
        content:
          application/json:
            schema:
                              type: object
                              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Не удалось удалить файл"