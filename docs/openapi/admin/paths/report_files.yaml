/report-files:
  get:
    tags: [Report Files]
    summary: Получить список файлов отчетов
    description: |
      Возвращает пагинированный список файлов отчетов, созданных системой.
      Поддерживает фильтрацию по типу, дате создания и имени файла.
      Для каждого файла генерируется временная ссылка для скачивания (действует 5 минут).
      
      **Особенности:**
      - Файлы создаются автоматически различными сервисами генерации отчетов
      - Хранятся в S3 с метаданными в базе данных
      - Организованы по типам и датам: {type}/{YYYY/MM/DD}/{filename}
      - Поддерживается срок хранения через expires_at
      - ID файлов кодируются в base64url для безопасности
    parameters:
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Тип отчета для фильтрации
        example: "reports"
      - name: date_from
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Дата начала периода создания файлов
        example: "2024-01-01"
      - name: date_to
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Дата окончания периода создания файлов
        example: "2024-12-31"
      - name: filename
        in: query
        required: false
        schema:
          type: string
        description: Поиск по имени файла (регистронезависимый)
        example: "материалы"
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          enum: ["created_at", "size", "filename"]
          default: "created_at"
        description: Поле для сортировки
      - name: sort_dir
        in: query
        required: false
        schema:
          type: string
          enum: ["asc", "desc"]
          default: "desc"
        description: Направление сортировки
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 15
        description: Количество элементов на странице
    responses:
      "200":
        description: Список файлов отчетов успешно получен
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileCollection.yaml'
            example:
              data:
                - id: "cmVwb3J0cy9tYXRlcmlhbC11c2FnZS8yMDI0LzAxLzE1L3JlcG9ydC54bHN4"
                  path: "reports/material-usage/2024/01/15/report.xlsx"
                  filename: "material_usage_report_20240115.xlsx"
                  name: "Отчет по материалам за январь"
                  type: "reports"
                  size: 2048576
                  created_at: "2024-01-15T09:30:00Z"
                  expires_at: "2025-01-15T09:30:00Z"
                  download_url: "https://storage.yandexcloud.net/bucket/reports/report.xlsx?X-Amz-Algorithm=..."
                - id: "Y29udHJhY3Rvci9zdW1tYXJ5LzIwMjQvMDEvMTAvcmVwb3J0LnBkZg"
                  path: "contractor/summary/2024/01/10/report.pdf"
                  filename: "contractor_summary_20240110.pdf"
                  name: null
                  type: "contractor"
                  size: 1024000
                  created_at: "2024-01-10T14:20:00Z"
                  expires_at: "2025-01-10T14:20:00Z"
                  download_url: "https://storage.yandexcloud.net/bucket/contractor/report.pdf?X-Amz-Algorithm=..."
              links:
                first: "http://localhost/api/v1/admin/report-files?page=1"
                last: "http://localhost/api/v1/admin/report-files?page=3"
                prev: null
                next: "http://localhost/api/v1/admin/report-files?page=2"
              meta:
                current_page: 1
                from: 1
                last_page: 3
                path: "http://localhost/api/v1/admin/report-files"
                per_page: 15
                to: 15
                total: 42
      "401":
        $ref: '../components/responses/UnauthorizedError.yaml'
      "403":
        $ref: '../components/responses/ForbiddenError.yaml'
      "422":
        description: Ошибка валидации параметров
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileErrorResponse.yaml'
            example:
              errors:
                sort_by: ["The selected sort by is invalid."]
                per_page: ["The per page must be between 1 and 100."]

/report-files/{key}:
  patch:
    tags: [Report Files]
    summary: Обновить название файла отчета
    description: |
      Обновляет читаемое название файла отчета.
      Позволяет присвоить более понятное название вместо автоматически сгенерированного имени файла.
      
      **Особенности:**
      - Изменяется только поле 'name' в базе данных
      - Оригинальное имя файла 'filename' остается неизменным
      - Максимальная длина названия: 255 символов
    parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: Закодированный идентификатор файла (base64url от path)
        example: "cmVwb3J0cy9tYXRlcmlhbC11c2FnZS8yMDI0LzAxLzE1L3JlcG9ydC54bHN4"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ReportFileUpdateRequest.yaml'
          example:
            name: "Отчет по расходу материалов за январь 2024"
    responses:
      "200":
        description: Название файла успешно обновлено
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileResponse.yaml'
            example:
              message: "Name updated."
      "401":
        $ref: '../components/responses/UnauthorizedError.yaml'
      "403":
        $ref: '../components/responses/ForbiddenError.yaml'
      "404":
        description: Файл не найден
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileErrorResponse.yaml'
            example:
              message: "File not found."
      "422":
        description: Ошибка валидации данных
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileErrorResponse.yaml'
            example:
              errors:
                name: ["The name field is required."]
  delete:
    tags: [Report Files]
    summary: Удалить файл отчета
    description: |
      Удаляет файл отчета из S3 хранилища и записи из базы данных.
      Операция необратима - восстановление файла невозможно.
      
      **Особенности:**
      - Удаляется и файл из S3, и запись из базы данных
      - Если файл не найден в S3, запись из БД все равно удаляется
      - Декодирует base64url ключ для получения реального пути
    parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: Закодированный идентификатор файла (base64url от path)
        example: "cmVwb3J0cy9tYXRlcmlhbC11c2FnZS8yMDI0LzAxLzE1L3JlcG9ydC54bHN4"
    responses:
      "200":
        description: Файл успешно удален
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileResponse.yaml'
            example:
              message: "File deleted."
      "401":
        $ref: '../components/responses/UnauthorizedError.yaml'
      "403":
        $ref: '../components/responses/ForbiddenError.yaml'
      "404":
        description: Файл не найден
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ReportFileErrorResponse.yaml'
            example:
              message: "File not found."