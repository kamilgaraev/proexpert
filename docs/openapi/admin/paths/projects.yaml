/projects:
  get:
    tags: [Projects]
    summary: Получить список проектов организации
    description: |
      Возвращает пагинированный список проектов текущей организации с поддержкой фильтрации и сортировки.
      Поддерживает фильтрацию по названию, статусу и архивному статусу.
      
      **Обрабатывается:** ProjectController::index
      **Метод сервиса:** ProjectService::getProjectsForCurrentOrg
      **Требует прав:** admin.projects.view
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: per_page
        description: Количество элементов на странице
        schema:
          type: integer
          default: 15
          minimum: 1
          maximum: 100
        example: 20
      - in: query
        name: name
        description: Фильтр по названию проекта (поиск по подстроке)
        schema:
          type: string
          maxLength: 255
        example: "Березовая"
      - in: query
        name: status
        description: Фильтр по статусу проекта
        schema:
          type: string
          enum: [active, completed, paused, cancelled]
        example: "active"
      - in: query
        name: is_archived
        description: Фильтр по архивному статусу (true/false)
        schema:
          type: boolean
        example: false
      - in: query
        name: sort_by
        description: Поле для сортировки
        schema:
          type: string
          default: created_at
          enum: [name, status, start_date, end_date, created_at, updated_at]
        example: "name"
      - in: query
        name: sort_direction
        description: Направление сортировки
        schema:
          type: string
          default: desc
          enum: [asc, desc]
        example: "asc"
    responses:
      "200":
        description: Пагинированный список проектов получен успешно
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ProjectCollection.yaml'
      "400":
        description: Ошибка бизнес-логики (недостаточно прав)
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Действие доступно только администратору организации"
      "500":
        description: Внутренняя ошибка сервера
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Внутренняя ошибка сервера при получении списка проектов."
  post:
    tags: [Projects]
    summary: Создать новый проект
    description: |
      Создает новый проект для текущей организации.
      Автоматически устанавливает organization_id и is_head=true.
      Поддерживает интеграцию с бухгалтерскими системами через external_code и cost_category_id.
      
      **Обрабатывается:** ProjectController::store
      **Метод сервиса:** ProjectService::createProject
      **Требует прав:** admin.projects.create
      **Миддлвары:** subscription.limit:max_projects
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ProjectCreateRequest.yaml'
          example:
            name: "Жилой комплекс Березовая роща"
            address: "г. Москва, ул. Березовая, д. 15"
            description: "Строительство жилого комплекса из 3 корпусов"
            customer: "ООО Строительная Компания"
            designer: "Архитектурное бюро ПРОЕКТ"
            start_date: "2024-02-01"
            end_date: "2024-12-31"
            status: "active"
            budget_amount: 15000000.50
            site_area_m2: 2500.75
            contract_number: "Д-2024/001"
            cost_category_id: 5
    responses:
      "201":
        description: Проект успешно создан
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Project.yaml'
      "422":
        description: Ошибки валидации входных данных
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Данные не прошли валидацию."
                errors:
                  type: object
                  properties:
                    name:
                      type: array
                      items:
                        type: string
                      example: ["Название проекта обязательно для заполнения."]
                    end_date:
                      type: array
                      items:
                        type: string
                      example: ["Дата окончания должна быть больше или равна дате начала."]
                    cost_category_id:
                      type: array
                      items:
                        type: string
                      example: ["Выбранная категория затрат не существует."]
      "500":
        description: Внутренняя ошибка сервера
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Внутренняя ошибка сервера при создании проекта."

/projects/{id}:
  get:
    tags: [Projects]
    summary: Получить данные конкретного проекта
    description: |
      Возвращает детальную информацию о конкретном проекте в рамках текущей организации.
      Проверяет принадлежность проекта текущей организации.
      Подгружает связанные данные: users, costCategory.
      
      **Обрабатывается:** ProjectController::show
      **Метод сервиса:** ProjectService::findProjectByIdForCurrentOrg
      **Требует прав:** admin.projects.view
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: Уникальный идентификатор проекта
        schema:
          type: integer
          minimum: 1
        example: 25
    responses:
      "200":
        description: Данные проекта получены успешно
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Project.yaml'
      "404":
        description: Проект не найден в этой организации
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Проект не найден в вашей организации."
      "500":
        description: Внутренняя ошибка сервера
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Внутренняя ошибка сервера при получении проекта."
  put:
    tags: [Projects]
    summary: Обновить проект
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ProjectCreateRequest.yaml'
    responses:
      "200":
        description: Обновлено
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ProjectResponse.yaml'
  delete:
    tags: [Projects]
    summary: Удалить проект
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "204":
        description: Успешно удалено

/projects/available-cost-categories:
  get:
    tags: [Projects]
    summary: Получить доступные категории затрат для проектов
    responses:
      "200":
        description: Категории затрат
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../components/schemas/CostCategory.yaml'

/projects/{id}/statistics:
  get:
    tags: [Projects]
    summary: Получить статистику проекта
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Статистика проекта
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        project_id:
                          type: integer
                        project_name:
                          type: string
                        materials:
                          type: object
                        works:
                          type: object
                        team:
                          type: object
                          properties:
                            assigned_users_count:
                              type: integer
                            members:
                              type: array
                              items:
                                $ref: '../components/schemas/ProjectTeamMember.yaml'
                        performance_acts:
                          type: array
                          items:
                            $ref: '../components/schemas/PerformanceAct.yaml'
                        project_info:
                          type: object

/projects/{id}/materials:
  get:
    tags: [Projects]
    summary: Получить материалы проекта
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Материалы проекта
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../components/schemas/Material.yaml'

/projects/{id}/work-types:
  get:
    tags: [Projects]
    summary: Получить виды работ проекта
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Виды работ проекта
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../components/schemas/WorkType.yaml'

/projects/{projectId}/foremen/{userId}:
  post:
    tags: [Projects]
    summary: Назначить прораба на проект
    parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Прораб назначен
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ApiResponse.yaml'
  delete:
    tags: [Projects]
    summary: Открепить прораба от проекта
    parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: integer
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Прораб откреплён
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ApiResponse.yaml'

/projects/{id}/full:
  get:
    tags: [Projects]
    summary: Получить полную сводку по проекту (финансы, статистика, организация)
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Полная информация
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        project:
                          $ref: '../components/schemas/Project.yaml'
                        analytics:
                          type: object
                          properties:
                            financial:
                              type: object
                              properties:
                                contracts_total_amount:
                                  type: number
                                  format: double
                                performed_amount_by_acts:
                                  type: number
                                  format: double
                                received_payments_amount:
                                  type: number
                                  format: double
                                works_total_amount:
                                  type: number
                                  format: double
                                materials_total_amount:
                                  type: number
                                  format: double
                                overall_cost:
                                  type: number
                                  format: double
                            counts:
                              type: object
                              properties:
                                organizations:
                                  type: integer
                                contracts:
                                  type: integer
                                performance_acts:
                                  type: integer
                        organizations_stats:
                          type: array
                          items:
                            $ref: '../components/schemas/OrganizationInProject.yaml'

/projects/{id}/available-organizations:
  get:
    tags: [Projects]
    summary: Получить организации, доступные для добавления в проект
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Доступные организации
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../components/schemas/ApiResponse.yaml'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '../components/schemas/OrganizationSimple.yaml' 