name: Update Grafana Dashboard

on:
  push:
    branches: [ main, master ]
    paths:
      - 'monitoring/grafana/dashboards/**'
      - 'monitoring/prometheus/**'

jobs:
  update-monitoring:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy monitoring configs
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /var/www/prohelper
          git pull origin main
          
          # Restart Grafana to reload dashboards
          docker-compose restart grafana
          
          # Restart Prometheus if config changed
          if git diff --name-only HEAD~1 HEAD | grep -q "monitoring/prometheus/"; then
            docker-compose restart prometheus
          fi
          
          # Wait for services to start
          sleep 10
          
          # Import dashboards via API
          python3 -c "
import json
import requests
import os
import time

# Wait for Grafana to be ready
time.sleep(5)

auth = ('admin', 'admin123')
url = 'http://localhost:3000/api/dashboards/db'

for filename in os.listdir('monitoring/grafana/dashboards'):
    if filename.endswith('.json'):
        try:
            with open(f'monitoring/grafana/dashboards/{filename}', 'r', encoding='utf-8') as f:
                dashboard = json.load(f)
            
            payload = {'dashboard': dashboard, 'overwrite': True}
            response = requests.post(url, json=payload, auth=auth, timeout=10)
            print(f'Imported {filename}: {response.status_code}')
            if response.status_code not in [200, 412]:
                print(f'Error: {response.text}')
        except Exception as e:
            print(f'Failed to import {filename}: {e}')
"