name: Deploy to Production

concurrency:
  group: prod-deploy
  cancel-in-progress: false

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY}}



      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install NPM deps & build docs
        run: |
          npm ci --silent
          npm run docs:build

      - name: Deploy via SSH (appleboy)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 89.169.44.117
          username: root
          key: ${{ secrets.DEPLOY }}
          script: |
            set -e # Остановить выполнение при первой ошибке
            cd /var/www/prohelper
            git reset --hard HEAD
            git clean -fd -e public/docs -e public/docs/**
            git fetch --all --prune
            git reset --hard origin/main
            php artisan down || true
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan storage:link || true
            if [ ! -f /usr/local/bin/rr ]; then vendor/bin/rr get-binary --location=/usr/local/bin --no-config --stability=stable; fi
            
            # КРИТИЧЕСКАЯ СЕКЦИЯ: безопасные миграции с автоматическим откатом
            echo "🔄 Running safe migrations with automatic rollback..."
            php artisan migrate:safe --force
            echo "✅ Migrations completed successfully"
            
            # Сканирование модулей для обновления прав доступа
            echo "🔄 Scanning modules..."
            php artisan modules:scan --clear-cache
            echo "✅ Modules scan completed successfully"
            
            # Оптимизация: очистка и кэширование в одной команде
            echo "🔄 Optimizing application..."
            php artisan optimize
            echo "✅ Optimization completed successfully"
            
            # Перезапуск queue workers
            echo "🔄 Restarting queue workers..."
            supervisorctl restart laravel-worker:* || true
            echo "✅ Queue workers restarted"
            
            php artisan up || true
            php artisan octane:reload || sudo systemctl reload prohelper-octane || sudo systemctl restart prohelper-octane

      - name: Copy docs to server (appleboy)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 89.169.44.117
          username: root
          key: ${{ secrets.DEPLOY }}
          source: public/docs/*
          target: /var/www/prohelper/public/docs/
          strip_components: 2

      - name: Verify and fix docs structure (appleboy)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 89.169.44.117
          username: root
          key: ${{ secrets.DEPLOY }}
          script: |
            cd /var/www/prohelper
            echo "Checking docs files structure..."
            ls -la public/docs/
            
            # Ensure all required directories exist
            mkdir -p public/docs/admin public/docs/lk public/docs/mobile public/docs/landing_admin
            
            # Copy HTML files to correct locations if they exist
            if [ -f "public/docs/admin_api.html" ]; then
              cp public/docs/admin_api.html public/docs/admin/index.html
              echo "✅ Copied admin_api.html"
            else
              echo "❌ Missing admin_api.html"
            fi
            
            if [ -f "public/docs/mobile_api.html" ]; then
              cp public/docs/mobile_api.html public/docs/mobile/index.html
              echo "✅ Copied mobile_api.html"
            else
              echo "❌ Missing mobile_api.html"
            fi
            
            if [ -f "public/docs/lk_api.html" ]; then
              cp public/docs/lk_api.html public/docs/lk/index.html
              echo "✅ Copied lk_api.html"
            else
              echo "❌ Missing lk_api.html"
            fi
            
            if [ -f "public/docs/landing_admin_api.html" ]; then
              cp public/docs/landing_admin_api.html public/docs/landing_admin/index.html
              echo "✅ Copied landing_admin_api.html"
            else
              echo "❌ Missing landing_admin_api.html"
            fi
            
            # Set correct permissions
            chown -R www-data:www-data public/docs/
            chmod -R 755 public/docs/
            
            echo "Final docs structure:"
            ls -la public/docs/*/index.html 2>/dev/null || echo "Some index.html files missing"

      - name: Setup Monitoring (appleboy)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 89.169.44.117
          username: root
          key: ${{ secrets.DEPLOY }}
          script: |
            cd /var/www/prohelper
            mkdir -p storage/logs/{api,telemetry}
            chmod -R 777 storage/logs/
            if ! docker ps | grep -q prometheus; then
              echo 'Starting monitoring stack...'
              chmod +x start-monitoring.sh
              ./start-monitoring.sh
            else
              echo 'Monitoring stack already running, restarting services...'
              (command -v docker-compose >/dev/null && docker-compose restart prometheus grafana || docker compose restart prometheus grafana)
            fi

      - name: Update Monitoring Configuration (appleboy)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 89.169.44.117
          username: root
          key: ${{ secrets.DEPLOY }}
          script: |
            cd /var/www/prohelper
            chmod +x start-monitoring.sh stop-monitoring.sh
            mkdir -p /var/lock
            flock -n /var/lock/prohelper-monitoring.lock -c '
              (docker ps -aq --filter name=^promtail$ | xargs -r docker stop) || true &&
              docker rm -f promtail 2>/dev/null || true &&
              if command -v docker-compose >/dev/null; then
                docker-compose up -d --remove-orphans --force-recreate prometheus grafana loki promtail node-exporter;
              else
                docker compose up -d --remove-orphans --force-recreate prometheus grafana loki promtail node-exporter;
              fi'

      - name: Notify Monitoring (appleboy)
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 89.169.44.117
          username: root
          key: ${{ secrets.DEPLOY }}
          script: |
            cd /var/www/prohelper
            curl -X POST http://localhost:9090/api/v1/admin/tsdb/snapshot || true
            echo '{"timestamp":"'$(date -Iseconds)'","event":"deployment","version":"${{ github.sha }}","branch":"${{ github.ref_name }}"}' >> storage/logs/api/deployment.log