name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY}}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install NPM deps & build docs
        run: |
          npm ci --silent
          npm run docs:build

      - name: Copy docs to server
        run: |
          scp -o StrictHostKeyChecking=no -r public/docs root@89.111.153.146:/var/www/prohelper/public/

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no root@89.111.153.146 "\
            cd /var/www/prohelper && \
            # Reset any local changes and force pull from main
            git reset --hard HEAD && \
            git clean -fd && \
            git fetch origin && \
            git reset --hard origin/main && \
            composer install --no-interaction --prefer-dist --optimize-autoloader && \
            # Download RR binary only if not present to avoid interactive prompt
            if [ ! -f /usr/local/bin/rr ]; then vendor/bin/rr get-binary --location=/usr/local/bin --no-config --stability=stable; fi && \
            php artisan migrate --force && \
            php artisan route:cache && \
            php artisan config:cache && \
            php artisan view:cache && \
            # Restart Octane (RoadRunner) service
            sudo systemctl restart prohelper-octane"

      - name: Setup Monitoring
        run: |
          ssh -o StrictHostKeyChecking=no root@89.111.153.146 "\
            cd /var/www/prohelper && \
            # Ensure monitoring directories exist
            mkdir -p storage/logs/{api,telemetry} && \
            chmod -R 777 storage/logs/ && \
            # Start monitoring stack if not running
            if ! docker ps | grep -q prometheus; then \
              echo 'Starting monitoring stack...' && \
              chmod +x start-monitoring.sh && \
              ./start-monitoring.sh; \
            else \
              echo 'Monitoring stack already running, restarting services...' && \
              (command -v docker-compose >/dev/null && docker-compose restart prometheus grafana || docker compose restart prometheus grafana); \
            fi"

      - name: Health Check
        run: |
          ssh -o StrictHostKeyChecking=no root@89.111.153.146 "\
            cd /var/www/prohelper && \
            # Wait for services to start
            sleep 30 && \
            # Check application health
            curl -f http://localhost/health || echo 'App health check failed' && \
            # Check monitoring services
            curl -f http://localhost:9090/-/healthy || echo 'Prometheus health check failed' && \
            curl -f http://localhost:3000/api/health || echo 'Grafana health check failed' && \
            curl -f http://localhost:3100/ready || echo 'Loki health check failed' && \
            # Check metrics endpoint
            curl -f http://localhost/metrics || echo 'Metrics endpoint check failed'"

      - name: Update Monitoring Configuration
        run: |
          ssh -o StrictHostKeyChecking=no root@89.111.153.146 "\
            cd /var/www/prohelper && \
            # Stop existing monitoring stack and restart
            chmod +x start-monitoring.sh stop-monitoring.sh && \
            ./stop-monitoring.sh && \
            sleep 5 && \
            ./start-monitoring.sh"

      - name: Notify Monitoring
        if: always()
        run: |
          ssh -o StrictHostKeyChecking=no root@89.111.153.146 "\
            cd /var/www/prohelper && \
            # Send deployment notification to monitoring
            curl -X POST http://localhost:9090/api/v1/admin/tsdb/snapshot || true && \
            # Log deployment event
            echo '{\"timestamp\":\"$(date -Iseconds)\",\"event\":\"deployment\",\"version\":\"${{ github.sha }}\",\"branch\":\"${{ github.ref_name }}\"}' >> storage/logs/api/deployment.log"