<?php

namespace App\BusinessModules\Features\BudgetEstimates\Services\Import;

class EstimateItemTypeDetector
{
    private array $materialPatterns = [
        'МАТ',
        'материал',
        'смеси',
        'смесь',
        'бетон',
        'раствор',
        'пленк',
        'пленоч',
        'вода',
        'щебен',
        'песок',
        'песч',
        'цемент',
        'арматур',
        'проволок',
        'сталь',
        'металл',
        'краск',
        'грунт',
        'эмаль',
        'лак',
        'олиф',
        'кирпич',
        'блок',
        'панел',
        'плит',
        'доск',
        'брус',
        'фанер',
        'гипсокартон',
        'ГКЛ',
        'ГВЛ',
        'изол',
        'утеплит',
        'минерал',
        'пенопласт',
        'пенополистирол',
        'керамзит',
        'гравий',
        'известь',
        'гипс',
        'шпаклев',
        'штукатур',
        'клей',
        'мастик',
        'герметик',
        'битум',
        'рубероид',
        'гидроизол',
        'теплоизол',
        'стеклоткан',
        'стекловат',
        'минват',
        'сетк',
        'труб',
        'трубопровод',
        'фитинг',
        'крепеж',
        'метиз',
        'болт',
        'гайк',
        'шуруп',
        'саморез',
        'анкер',
        'дюбел',
        'гвозд',
        'заклеп',
        'электрод',
        'кабел',
        'провод',
        'шнур',
        'лампа',
        'светильник',
        'выключател',
        'розетк',
        'короб',
        'гофр',
        'линолеум',
        'ламинат',
        'паркет',
        'плитк',
        'керамогранит',
        'обои',
        'стекло',
        'зеркал',
        'окн',
        'двер',
        'дверн',
        'ворот',
        'калитк',
        'засов',
        'замок',
        'ручк',
        'петл',
        'навес',
        'желоб',
        'водосток',
        'канализац',
        'коллектор',
        'люк',
        'решетк',
        'сантехник',
        'ванн',
        'унитаз',
        'раковин',
        'смесител',
        'кран',
        'вентил',
        'задвижк',
        'засыпк',
        'грунт',
        'почв',
    ];

    private array $equipmentPatterns = [
        'МР',
        'ЭМ',
        'машин',
        'механизм',
        'кран',
        'автокран',
        'башенный кран',
        'трактор',
        'экскаватор',
        'бульдозер',
        'автомобил',
        'самосвал',
        'грузовик',
        'компрессор',
        'вибратор',
        'вибропло',
        'вибротрамбовк',
        'погрузчик',
        'фронтальн',
        'трамбовк',
        'катк',
        'автогрейдер',
        'скрепер',
        'гидромолот',
        'перфоратор',
        'отбойн',
        'бетоносмесител',
        'бетононасос',
        'бетоноукладчик',
        'растворосмесител',
        'растворонасос',
        'штукатурн',
        'малярн',
        'сварочн',
        'аппарат',
        'агрегат',
        'установк',
        'станок',
        'станци',
        'генератор',
        'трансформатор',
        'подстанци',
        'лебедк',
        'тал',
        'домкрат',
        'подъемник',
        'вышк',
        'люльк',
        'леса',
        'подмост',
        'лесторн',
        'опалубк',
        'форм',
        'щит',
        'стойк',
        'балк',
        'ригел',
        'насос',
        'мотопомп',
        'электронасос',
        'пескоструй',
        'дробеструй',
        'пескомет',
        'штроборез',
        'резч',
        'пилорам',
        'электропил',
        'болгарк',
        'дрель',
        'шлифовальн',
        'полировальн',
        'фрезеровальн',
        'токарн',
        'сверлильн',
        'электроды',
        'эксплуатаци',
        'транспорт',
        'перевозк',
        'автосамосвал',
        'авточас',
        'маш.-час',
        'машино-час',
        'час работы',
    ];

    private array $laborPatterns = [
        'ОТм',
        'ЭТм',
        'ТЗ',
        'ТЗм',
        'ТЗп',
        'ФОТ',
        'зарплат',
        'заработн',
        'оплат труд',
        'разряд',
        'средний разряд',
        'машинист',
        'рабочий',
        'рабочих',
        'бригад',
        'звено',
        'монтажник',
        'электрик',
        'электромонтаж',
        'сварщик',
        'слесар',
        'плотник',
        'столяр',
        'каменщик',
        'штукатур',
        'маляр',
        'бетонщик',
        'арматурщик',
        'водитель',
        'крановщик',
        'сантехник',
        'изолировщик',
        'кровельщик',
        'отделочник',
        'облицовщик',
        'паркетчик',
        'стекольщик',
        'такелажник',
        'грузчик',
        'подсобн',
        'чел.-час',
        'человеко-час',
        'чел-час',
        'трудозатрат',
        'затраты труда',
        'персонал',
        'оплата труда рабочих',
        'оплата труда машинист',
    ];

    private array $summaryPatterns = [
        'Итого',
        'ИТОГО',
        'Всего',
        'ВСЕГО',
        'Сумма',
        'СУММА',
        'накладн',
        'НР',
        'СП',
        'прибыль',
        'сметная прибыль',
        'сметн прибыл',
        'НДС',
        'н.д.с',
        'налог',
        'резерв',
        'резерв средств',
        'непредвиденн',
        'коэффициент',
        'коэфф',
        'к-т',
        'индекс',
        'поправк',
        'пересчет',
        'лимит',
        'базисн',
        'текущ',
        'уровне цен',
        'стоимость по смете',
        'стоимость всего',
        'сметная стоимость',
        'строительн работ',
        'монтажн работ',
        'прямые затрат',
        'прямых затрат',
        'затраты труда',
        'трудоемкост',
        'материал всего',
        'машин всего',
        'оборудован',
        'прочие',
        'подраздел',
        'раздел',
        'глава',
        'объект',
        'локальн',
        'объектн',
        'сводн',
        'итого по',
        'всего по',
        'стоимость',
        'общая',
        'общей',
    ];

    public function detectType(?string $justification, string $name, ?string $code = null): string
    {
        $justificationUpper = mb_strtoupper($justification ?? '');
        $nameUpper = mb_strtoupper($name);
        $combinedText = trim(($code ?? '') . ' ' . ($justification ?? '') . ' ' . $name);
        
        if (preg_match('/^(ОТм|ЭТм|ТЗ|ТЗм|ТЗп|ФОТ)/ui', $justificationUpper)) {
            return 'labor';
        }
        
        if (preg_match('/^(МАТ|ГЭСНм|ФЕРм|ТЕРм)/ui', $justificationUpper)) {
            return 'material';
        }
        
        if (preg_match('/^(МР|ЭМ|ГЭСНр|ФЕРр|ТЕРр)/ui', $justificationUpper)) {
            return 'equipment';
        }
        
        if ($this->matchesPatterns($combinedText, $this->laborPatterns)) {
            return 'labor';
        }
        
        if ($this->matchesPatterns($combinedText, $this->summaryPatterns)) {
            return 'summary';
        }
        
        if ($this->matchesPatterns($combinedText, $this->equipmentPatterns)) {
            return 'equipment';
        }
        
        if ($this->matchesPatterns($combinedText, $this->materialPatterns)) {
            return 'material';
        }
        
        if ($this->looksLikeWorkCode($justification)) {
            return 'work';
        }
        
        if ($this->hasNumericCode($code)) {
            return 'work';
        }
        
        return 'work';
    }

    private function matchesPatterns(string $text, array $patterns): bool
    {
        foreach ($patterns as $pattern) {
            if (mb_stripos($text, $pattern) !== false) {
                return true;
            }
        }
        
        return false;
    }

    private function looksLikeWorkCode(?string $code): bool
    {
        if (empty($code)) {
            return false;
        }
        
        if (preg_match('/^(ФЕР|ГЭСН|ТЕР|ГЭСНм|ГЭСНр|ГЭСНп|ФЕРм|ФЕРр|ФЕРп)/ui', $code)) {
            return true;
        }
        
        if (preg_match('/^\d{1,2}-\d{1,2}-\d{1,3}-\d{1,2}/', $code)) {
            return true;
        }
        
        if (preg_match('/^[А-ЯA-Z]{2,5}\d{2,3}-\d{1,4}/ui', $code)) {
            return true;
        }
        
        return false;
    }

    private function hasNumericCode(?string $code): bool
    {
        if (empty($code)) {
            return false;
        }
        
        return preg_match('/\d/', $code) === 1;
    }

    public function getTypeLabel(string $type): string
    {
        return match ($type) {
            'work' => 'Работа',
            'material' => 'Материал',
            'equipment' => 'Машины/Механизмы',
            'labor' => 'Трудозатраты',
            'summary' => 'Итоговая строка',
            default => 'Неизвестно',
        };
    }

    public function getTypeIcon(string $type): string
    {
        return match ($type) {
            'work' => '🔧',
            'material' => '📦',
            'equipment' => '🚜',
            'labor' => '👷',
            'summary' => '📊',
            default => '❓',
        };
    }
}

